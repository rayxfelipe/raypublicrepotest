{
	"name": "NHTSA Store Proc",
	"properties": {
		"folder": {
			"name": "WA-DOL"
		},
		"content": {
			"query": "/****** Object:  StoredProcedure [dbo].[spVinDecode]    Script Date: 8/25/2023 2:48:09 PM ******/\nSET ANSI_NULLS ON\nGO\n\nSET QUOTED_IDENTIFIER ON\nGO\n\n\nCREATE procedure [dbo].[spVinDecode]\n\t@v varchar(50),\n\t@includePrivate bit = null, \n\t@year int = null, \n\t@includeAll bit = null \nas \nbegin\n\tSET NOCOUNT ON;\n\n\n\n\tdeclare \n\t\t@make varchar(50) = null, \n\t\t@includeNotPublicilyAvailable bit = null, \n\t\t@NoOutput bit = 0, \n\t\t@vin varchar(17) = '', \n\t\t@modelYear int, \n\t\t@modelYearSource varchar(20) = '***X*|Y', \n\t\t@conclusive bit = 0, \n\t\t@e12 bit = 0 \n\tdeclare @ReturnCode varchar(100) = ''\n\tset @vin = upper(LTRIM(RTRIM(@v)))\n\tdeclare @descriptor varchar(17) = dbo.fVinDescriptor(@vin) \n\tdeclare @dmy int = null\n\n\n\n\t\n\t\n\t\tset @dmy = (select ModelYear from VinDescriptor where Descriptor = @descriptor)\n\t\n\tdeclare @rmy int, @omy int\n\n\tdeclare @DecItem [tblDecodingItem]\n\n\n\n\n\tif @dmy between 1980 and (year(getdate())+1)\n\tbegin\n\t\t\n\t\tselect @conclusive=1, @e12 = iif (@year is not null and @dmy is not null and @year <> @dmy, 1, 0)\n\t\tinsert into @DecItem ([DecodingId],[CreatedOn],[PatternId],[Keys],[VinSchemaId],[WmiId],[ElementId],[AttributeId],[Value],[Source],[Priority],[TobeQCed])\n\t\texec [dbo].[spVinDecode_Core] 1, @vin, @dmy, @descriptor, @conclusive, @e12, @includeAll, @includePrivate, @includeNotPublicilyAvailable, @ReturnCode output\n\tend\n\telse\n\tbegin\n\t\tselect @rmy = dbo.fVinModelYear2 (upper(@vin)), @conclusive = 1\n\t\tif @rmy < 0 \n\t\t\tselect @omy = -@rmy-30, @rmy = -@rmy,  @conclusive = 0\n\n\n\t\tdeclare @do3and4 bit = 1\n\t\t\n\t\tif @year between 1980 and (year(getdate())+1)\n\t\tbegin\n\t\t\tif (@year = @rmy or @year = @omy)\n\t\t\t\tset @do3and4 = 1\n\t\t\telse\n\t\t\tbegin\n\t\t\t\tset @modelYearSource = cast(@year as varchar)\n\t\t\t\t\n\n\t\t\t\tinsert into @DecItem ([DecodingId],[CreatedOn],[PatternId],[Keys],[VinSchemaId],[WmiId],[ElementId],[AttributeId],[Value],[Source],[Priority],[TobeQCed])\n\t\t\t\texec [dbo].[spVinDecode_Core] 2, @vin, @year, @modelYearSource, 1, 1, @includeAll, @includePrivate, @includeNotPublicilyAvailable, @ReturnCode output\n\t\t\t\tset @do3and4 = iif(@ReturnCode like '% 8 %' and (@rmy is not null), 1, 0)  \n\n\t\t\tend\n\t\tend\n\n\t\t\n\t\tif @do3and4 = 1\n\t\tbegin\n\t\t\tselect @e12 = iif (@year is not null and @rmy is not null and @year <> @rmy, 1, 0)\n\t\t\tinsert into @DecItem ([DecodingId],[CreatedOn],[PatternId],[Keys],[VinSchemaId],[WmiId],[ElementId],[AttributeId],[Value],[Source],[Priority],[TobeQCed])\n\t\t\texec [dbo].[spVinDecode_Core] 3, @vin, @rmy, @modelYearSource, @conclusive, @e12, @includeAll, @includePrivate, @includeNotPublicilyAvailable, @ReturnCode output\n\t\t\tif not @omy is null\n\t\t\tbegin\n\t\t\t\tselect @e12 = iif (@year is not null and @omy is not null and @year <> @omy, 1, 0)\n\t\t\t\tinsert into @DecItem ([DecodingId],[CreatedOn],[PatternId],[Keys],[VinSchemaId],[WmiId],[ElementId],[AttributeId],[Value],[Source],[Priority],[TobeQCed])\n\t\t\t\texec [dbo].[spVinDecode_Core] 4, @vin, @omy, @modelYearSource, @conclusive, @e12, @includeAll, @includePrivate, @includeNotPublicilyAvailable, @ReturnCode output\n\t\t\tend\n\t\tend\n\t\t\n\tend\n\n\n\n\t\n\tdeclare @bestPass int = 0 \n\tdeclare @passes int = (select count (distinct decodingId) from @DecItem)\n\n\tCREATE TABLE #x(\n\t\tDecodingId int null, \n\t\tErrorCodes varchar(100) null, \n\t\tErrorValue int null,\n\t\tElementsWeight int null , \n\t\tPatterns int null , \n\t\tModelYear int\n) \n\tinsert into #x\n\tselect err.* , el.ElementsWeight, p.Patterns, my.ModelYear + my.ModelYearBonus as ModelYear\n\tfrom \n\t(\t\n\t\tselect distinct DecodingId\n\t\tfrom @DecItem \n\t) a \n\tleft outer join\n\t(\t\n\t\tselect DecodingId, Value as ErrorCodes, dbo.fErrorValue(Value) ErrorValue\n\t\tfrom @DecItem \n\t\twhere ElementId = 143\n\t) err on a.DecodingId = err.DecodingId\n\tleft outer join\n\t(\t\n\t\tselect DecodingId, sum(weight) as ElementsWeight\n\t\tfrom (\n\t\t\tselect distinct DecodingId, d.ElementId, e.weight\n\t\t\tfrom @DecItem d inner join Element e on d.ElementId = e.id \n\t\t\twhere isnull(d.Value, '') <> '' and e.weight is not null\n\t\t) t\n\t\tgroup by DecodingId\n\t) el on err.DecodingId = el.DecodingId\n\tleft outer join\n\t(\t\n\t\tselect DecodingId, count(*) as Patterns\n\t\tfrom @DecItem d \n\t\twhere Source in ('Pattern', 'EngineModelPattern' ) and isnull(Value, '') not in ('', 'Not Applicable')\n\t\tgroup by DecodingId\n\t) p on err.DecodingId = p.DecodingId\n\tleft outer join\n\t(\t\n\t\tselect DecodingId, cast(Value as int) as ModelYear, case when @year = value then 10000 else 0 end as ModelYearBonus\n\t\tfrom @DecItem \n\t\twhere ElementId = 29\n\t) my on a.DecodingId = my.DecodingId\n\n\tselect top 1 @bestPass = DecodingId from #x order by ErrorValue desc, ElementsWeight desc, Patterns desc, modelYear desc \n\n\n\tdelete @DecItem where decodingid <> @bestPass\n\n\t\n\tupdate @DecItem \n\tset TobeQCed = vs.TobeQCed\n\tfrom @DecItem d inner join VinSchema vs on d.VinSchemaId = vs.Id and vs.TobeQCed = 1\n\twhere lower(left(isnull(d.Source, ''), 7)) in ('pattern', 'formula', 'enginem', 'convers')\n\n\t\n\n\tif isnull(@includeNotPublicilyAvailable, 0) = 0 \n\t\tdelete \n\t\tfrom @DecItem \n\t\twhere TobeQCed = 1\n\n\n\n\n\tif @NoOutput = 0\n\tbegin\n\n\t\n\tupdate @DecItem\t\n\tset value = case when e.LookupTable is null then t.AttributeId else dbo.fElementAttributeValue (t.ElementId, t.AttributeId) end\n\tfrom @DecItem t inner join Element e on t.ElementId = e.Id\n\twhere t.Value = 'XXX' \n\n\t\t\n\t\tselect \n\t\t\te.GroupName, \n\t\t\te.Name as Variable, \n\t\t\tREPLACE(REPLACE(REPLACE(t.Value, CHAR(9), ' '), CHAR(13), ' '), CHAR(10), ' ') as Value, \n\t\t\tt.PatternId, \n\t\t\tt.VinSchemaId, \n\t\t\tt.Keys, \n\t\t\te.id as ElementId, \n\t\t\tt.AttributeId, \n\t\t\tt.CreatedOn as CreatedOn, \n\t\t\tt.WmiId,\n\t\t\te.Code, \n\t\t\te.DataType, \n\t\t\te.Decode,\n\t\t\tt.Source, \n\t\t\tt.ToBeQCed as ToBeQCd\n\t\tfrom \n\t\t\tElement e with (nolock)\n\t\t\tleft outer join @DecItem t on t.ElementId = e.Id\n\t\twhere \n\t\t\t\n\t\t\t(isnull(e.Decode, '') <> '') \n\t\t\tand ((@includeAll) = 1 or (isnull(@includeAll, 0) = 0 and not t.ElementId is null)) \n\t\t\tand (@includePrivate = 1 or isnull(e.IsPrivate, 0) = 0 ) \n\n\n\t\torder by \n\t\n\t\t\tcase isnull(e.GroupName, '')\n\t\t\t\twhen '' then 0\n\t\t\t\twhen 'General' then 1\n\t\t\t\twhen 'Exterior / Body' then 2\n\t\t\t\twhen 'Exterior / Dimension' then 3\n\t\t\t\twhen 'Exterior / Truck' then 4\n\t\t\t\twhen 'Exterior / Trailer' then 5\n\t\t\t\twhen 'Exterior / Wheel tire' then 6\n\t\t\t\twhen 'Interior' then 7\n\t\t\t\twhen 'Interior / Seat' then 8\n\t\t\t\twhen 'Mechanical / Transmission' then 9\n\t\t\t\twhen 'Mechanical / Drivetrain' then 10\n\t\t\t\twhen 'Mechanical / Brake' then 11\n\t\t\t\twhen 'Mechanical / Battery' then 12\n\t\t\t\twhen 'Mechanical / Battery / Charger' then 13\n\t\t\t\twhen 'Engine' then 14\n\t\t\t\twhen 'Passive Safety System' then 15\n\t\t\t\twhen 'Passive Safety System / Air Bag Location' then 16\n\t\t\t\twhen 'Active Safety System' then 17\n\t\t\t\twhen 'Internal' then 18\n\t\t\t\telse 99 end\n\t\t\t, e.Id\n\tend\n\n\t\t\nend\nGO\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "vPICList_lite_2023_08",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}