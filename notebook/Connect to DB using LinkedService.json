{
	"name": "Connect to DB using LinkedService",
	"properties": {
		"folder": {
			"name": "WA-DOL/DB Connection"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c826f19e-63d3-4380-a070-99b3380e4670"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/499bc654-f84c-46c2-952c-b30be508f78c/resourceGroups/rg-synapse-demo-001/providers/Microsoft.Synapse/workspaces/synw-demoworkspace-001/bigDataPools/sparkpool1",
				"name": "sparkpool1",
				"type": "Spark",
				"endpoint": "https://synw-demoworkspace-001.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"sql_server_name = \"ray-azuresqlvm2.westus3.cloudapp.azure.com\"\r\n",
					"db_port = 1433\r\n",
					"db_table = \"dbo.ABS\"\r\n",
					"db_name = \"vPICList_Lite_Sep19\"\r\n",
					"linked_service_name = \"NHTSASQLVM2\"\r\n",
					"\r\n",
					"access_token = mssparkutils.credentials.getConnectionStringOrCreds(linked_service_name)\r\n",
					"print(\"access_token: \"+str(type(access_token)))\r\n",
					"\r\n",
					"# Read a table, store results in a dataframe\r\n",
					"df = spark.read.format(\"com.microsoft.sqlserver.jdbc.spark\") \\\r\n",
					"    .option(\"url\", \"jdbc:sqlserver://%s.database.windows.net:%d\" % (sql_server_name, db_port)) \\\r\n",
					"    .option(\"dbtable\", db_table) \\\r\n",
					"    .option(\"accessToken\", access_token) \\\r\n",
					"    .option(\"encrypt\", \"true\") \\\r\n",
					"    .option(\"databaseName\", db_name) \\\r\n",
					"    .option(\"hostNameInCertificate\", \"*.database.windows.net\") \\\r\n",
					"    .load()\r\n",
					"\r\n",
					"# Read another table, store results in a dataframe\r\n",
					"db_table = \"dbo.test\"\r\n",
					"df2 = spark.read.format(\"com.microsoft.sqlserver.jdbc.spark\") \\\r\n",
					"    .option(\"url\", \"jdbc:sqlserver://%s.database.windows.net:%d\" % (sql_server_name, db_port)) \\\r\n",
					"    .option(\"dbtable\", db_table) \\\r\n",
					"    .option(\"accessToken\", access_token) \\\r\n",
					"    .option(\"encrypt\", \"true\") \\\r\n",
					"    .option(\"databaseName\", db_name) \\\r\n",
					"    .option(\"hostNameInCertificate\", \"*.database.windows.net\") \\\r\n",
					"    .load()\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df)\r\n",
					"\r\n",
					"display(df2)"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Run in the source database:\r\n",
					"\r\n",
					"master: create user [raysynapsemgdvnet] from external PROVIDER;\r\n",
					"\r\n",
					"database: exec sp_addrolemember 'db_datareader', 'raysynapsemgdvnet'"
				]
			}
		]
	}
}