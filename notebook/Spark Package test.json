{
	"name": "Spark Package test",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool12",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "4",
				"spark.autotune.trackingId": "b56be9fe-b9c6-487a-bef4-835355385a99"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/499bc654-f84c-46c2-952c-b30be508f78c/resourceGroups/SynapseFromScratch-Demo/providers/Microsoft.Synapse/workspaces/synapsefromscratch/bigDataPools/SparkPool12",
				"name": "SparkPool12",
				"type": "Spark",
				"endpoint": "https://synapsefromscratch.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool12",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# import numpy as np\r\n",
					"# import numpy\r\n",
					"\r\n",
					"# Create a NumPy array\r\n",
					"array = numpy.array([1, 2, 3, 4, 5])\r\n",
					"print(array)\r\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#from bs4 import BeautifulSoup\r\n",
					"import BeautifulSoup\r\n",
					"import requests\r\n",
					"\r\n",
					"# Make an HTTP request to the website\r\n",
					"website = requests.get('http://microsoft.com/')\r\n",
					"\r\n",
					"# Parse the HTML content\r\n",
					"soup = BeautifulSoup(website.content, 'html.parser')\r\n",
					"\r\n",
					"# Find an element by its ID and print its text\r\n",
					"# target_id = soup.find(id='enter the target id here')\r\n",
					"# print(target_id.text)\r\n",
					""
				],
				"execution_count": 4
			}
		]
	}
}