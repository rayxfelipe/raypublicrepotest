{
	"name": "BHDW Cross DB Query - MI Python 3",
	"properties": {
		"folder": {
			"name": "OR BHDW"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SynapseDemoSprk",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": true,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "e1b13903-e5f1-48d8-ac12-a086324873fc"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/499bc654-f84c-46c2-952c-b30be508f78c/resourceGroups/Synapse-Demo/providers/Microsoft.Synapse/workspaces/rayfelipesynapseworkspace/bigDataPools/SynapseDemoSprk",
				"name": "SynapseDemoSprk",
				"type": "Spark",
				"endpoint": "https://rayfelipesynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SynapseDemoSprk",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from azure.identity import DefaultAzureCredential\r\n",
					"import pyodbc, struct\r\n",
					"\r\n",
					"# Uncomment one of the two lines depending on the identity type\r\n",
					"credential = DefaultAzureCredential() # system-assigned identity\r\n",
					"# credential = DefaultAzureCredential(managed_identity_client_id='<client-id-of-user-assigned-identity>') # user-assigned identity\r\n",
					"# credential = DefaultAzureCredential(managed_identity_client_id='rayfelipe') # user-assigned identity\r\n",
					"\r\n",
					"# Get token for Azure SQL Database and convert to UTF-16-LE for SQL Server driver\r\n",
					"token = credential.get_token(\"https://database.windows.net/.default\").token.encode(\"UTF-16-LE\")\r\n",
					"token_struct = struct.pack(f'<I{len(token)}s', len(token), token)\r\n",
					"\r\n",
					"# Connect with the token\r\n",
					"SQL_COPT_SS_ACCESS_TOKEN = 1256\r\n",
					"connString = f\"Driver={{ODBC Driver 17 for SQL Server}};SERVER=rayfelipesynapseworkspace.sql.azuresynapse.net;DATABASE=dedpool1\"\r\n",
					"conn = pyodbc.connect(connString, attrs_before={SQL_COPT_SS_ACCESS_TOKEN: token_struct})"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pyodbc\r\n",
					"server=\"rayfelipesynapseworkspace.sql.azuresynapse.net\"\r\n",
					"# server=\"rayfelipesynapseworkspace.database.windows.net\"\r\n",
					"\r\n",
					"database=\"dedpool1\"\r\n",
					"# driver=\"{ODBC Driver 17 for SQL Server}\"\r\n",
					"driver=\"{ODBC Driver 18 for SQL Server}\"\r\n",
					"query=\"SELECT * FROM dbo.students\"\r\n",
					"# Optional to use username and password for authentication\r\n",
					"# username = 'name' \r\n",
					"# password = 'pass'\r\n",
					"db_token = ''\r\n",
					"connection_string = 'DRIVER='+driver+';SERVER='+server+';DATABASE='+database\r\n",
					"\r\n",
					"# conn = pyodbc.connect(connection_string+';Authentication=ActiveDirectoryMsi')\r\n",
					"conn = pyodbc.connect(connection_string+';Authentication=ActiveDirectoryInteractive')\r\n",
					"\r\n",
					"cursor = conn.cursor()\r\n",
					"cursor.execute(query) \r\n",
					"row = cursor.fetchone()"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import sys\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"sc = SparkSession.builder.getOrCreate()\r\n",
					"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\r\n",
					"\r\n",
					"connection_string = token_library.GetSecret(\"<AZURE KEY VAULT NAME>\", \"<SECRET KEY>\", \"<LINKED SERVICE NAME>\")\r\n",
					"print(connection_string)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pyodbc\r\n",
					"server=\"rayfelipesynapseworkspace.sql.azuresynapse.net\"\r\n",
					"cnxn = pyodbc.connect('DRIVER={Devart ODBC Driver 18 for SQL Server};User=raysynapsemgdvnet;Authentication=Active Directory Interactive;Server=rayfelipesynapseworkspace.sql.azuresynapse.net;Database=dedpool1;')"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pyodbc\r\n",
					"cnxn = pyodbc.connect('DRIVER={ODBC Driver for SQL Server};Server=tcp:rayfelipesynapseworkspace.sql.azuresynapse.net;Authentication=ActiveDirectoryInteractive;Database=dedpool1;')"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.sql(\"SELECT * FROM nyctaxi.trip\")\r\n",
					"df.show(10)"
				],
				"execution_count": null
			}
		]
	}
}