{
	"name": "1-Write to Lake DB",
	"properties": {
		"folder": {
			"name": "BHDW"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool10",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2c327ee9-01b1-41ab-91fe-24e0fb4d3a38"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/499bc654-f84c-46c2-952c-b30be508f78c/resourceGroups/SynapseFromScratch-Demo/providers/Microsoft.Synapse/workspaces/synapsefromscratch/bigDataPools/SparkPool10",
				"name": "SparkPool10",
				"type": "Spark",
				"endpoint": "https://synapsefromscratch.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool10",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 60
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://dlsynapsefromscratchfs@dlsynapsefromscratchacct.dfs.core.windows.net/SampleDataSets/CannabisTaxRevenues.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					", header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.show()\r\n",
					"df.printSchema()\r\n",
					"df.select('Calendar_Year').show()\r\n",
					"df.filter(df['Calendar_Year'] == \"2018\").show()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pd_df = df.toPandas()\r\n",
					"pd_df.info()\r\n",
					"pd_df.describe()\r\n",
					"pd_df.head()"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pd_df['Calendar_Year'] = pd_df['Calendar_Year'].astype(int)\r\n",
					"pd_df['Quarter'] = pd_df['Quarter'].astype(str)\r\n",
					"pd_df['Excise_Tax'] = pd_df['Excise_Tax'].astype(int)\r\n",
					"pd_df['Cultivation_Tax'] = pd_df['Cultivation_Tax'].astype(str)\r\n",
					"pd_df['Total_Tax'] = pd_df['Total_Tax'].astype(int)\r\n",
					"pd_df['Taxable_Sales'] = pd_df['Taxable_Sales'].astype(int)\r\n",
					"\r\n",
					"import matplotlib.pyplot as plt\r\n",
					"pd_df.hist(bins=10, figsize=(15,8))\r\n",
					"plt.show()\r\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pd_df.plot(figsize=(10,5))\r\n",
					"pd_df.plot.scatter(x='Excise_Tax', y='Calendar_Year', figsize=(5,5))\r\n",
					"# pd_df.plot.scatter(x='Number of Returns Filed', y='16. Total Cannabis Excise Tax Due', figsize=(5,5))\r\n",
					"\r\n",
					"plt.show()"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df.printSchema()\r\n",
					"# display(df.limit(10))\r\n",
					"# display(df)\r\n",
					"\r\n",
					"spark.sql(\"CREATE DATABASE IF NOT EXISTS cannabis2\")\r\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"cannabis2.taxrevenue2\")\r\n",
					"\r\n",
					"df_select_rs = spark.sql(\"select Calendar_Year from cannabis2.taxrevenue2\")\r\n",
					"display(df_select_rs)"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"sparksql_df = spark.sql(\"\"\"\r\n",
					"   SELECT *\r\n",
					"   FROM cannabis.taxrevenue\r\n",
					"   WHERE Calendar_Year == \"2019\"\r\n",
					"\"\"\") \r\n",
					"display(sparksql_df)\r\n",
					"sparksql_df.write.mode(\"overwrite\").saveAsTable(\"cannabis.taxrevenue2019\")"
				],
				"execution_count": 7
			}
		]
	}
}