{
	"name": "BSCC Notebook",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "bec6342a-b5fa-4b29-9c03-89c4888e6c8a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/499bc654-f84c-46c2-952c-b30be508f78c/resourceGroups/SynapseMgdVnet-Demo/providers/Microsoft.Synapse/workspaces/raysynapsemgdvnet/bigDataPools/SparkPool1",
				"name": "SparkPool1",
				"type": "Spark",
				"endpoint": "https://raysynapsemgdvnet.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql.functions import col, year, month, dayofmonth, unix_timestamp, round, when\r\n",
					"from datetime import datetime\r\n",
					"\r\n",
					"# Replace your storage location\r\n",
					"covid19casesdemographicsdf = spark.read.load('abfss://bsccsandboxdlgen2filesystem@bsccsandboxdlgen2acct.dfs.core.windows.net/bscc_datasets/covid19casesdemographics.csv', \r\n",
					"format='csv', header=True)\r\n",
					" \r\n",
					"#covid19casesdemographicsdf = spark.read.load('abfss://bsccdemodlgen2filesystem@bsccdemodlgen2acct.dfs.core.windows.net/bscc_dataset/covid19casesdemographics.csv', \r\n",
					"#format='csv', header=True)\r\n",
					"\r\n",
					"covid19casesdemographicsdf = covid19casesdemographicsdf.where(col('deaths') > 0)\r\n",
					"covid19casesdemographicsdf = covid19casesdemographicsdf.where(col('demographic_category') == 'Gender')\r\n",
					"\r\n",
					"spark.sql(\"CREATE DATABASE IF NOT EXISTS bcc_data_lake\")\r\n",
					"covid19casesdemographicsdf.repartition(4).write.mode(\"overwrite\").saveAsTable(\"bcc_data_lake.covid_bygender\")\r\n",
					"\r\n",
					"print(\"Extracted & cleaned data\")\r\n",
					"\r\n",
					"#covid19casesdemographicsdf = covid19casesdemographicsdf.select(col(\"demographic_category\"))\r\n",
					"\r\n",
					"display(covid19casesdemographicsdf.limit(1000))\r\n",
					"\r\n",
					"#covid19casesdemographicsdf.printSchema()\r\n",
					"\r\n",
					""
				],
				"execution_count": null
			}
		]
	}
}