{
	"name": "decoding_env_config",
	"properties": {
		"folder": {
			"name": "WADOL"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "3",
				"spark.autotune.trackingId": "b033a3f0-0bc3-491e-a313-95585e8495b8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/499bc654-f84c-46c2-952c-b30be508f78c/resourceGroups/SynapseMgdVnet-Demo/providers/Microsoft.Synapse/workspaces/raysynapsemgdvnet/bigDataPools/SparkPool1",
				"name": "SparkPool1",
				"type": "Spark",
				"endpoint": "https://raysynapsemgdvnet.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false
					}
				},
				"source": [
					"import os\r\n",
					"\r\n",
					"databases = {\r\n",
					"    'vin_group_db': 'RPOdataTEAM', # server DB - vin table\r\n",
					"    'vin_group_server': 'ray-azuresql2-server.database.windows.net', # server host DB - vin table\r\n",
					"    'nhtsa_db': 'vPICList_lite_2023_07', # NHTSA source DB\r\n",
					"    'nhtsa_server': 'ray-azuresql2-server.database.windows.net', # NHTSA source host DB\r\n",
					"    'output_db': 'RPOdataTEAM', # output for Python results transofmration\r\n",
					"    'output_server': '', # output for Python results.... host.\r\n",
					"    'output_table': 'NHTSA_Staging' # output for Python results.... table. AKA NHTSA master table?\r\n",
					"}\r\n",
					"\r\n",
					"\"\"\"\r\n",
					"The configuration is set to decode against RAO's\r\n",
					"copy of NHTSA's database.\r\n",
					"\r\n",
					"\"\"\""
				],
				"execution_count": 4
			}
		]
	}
}